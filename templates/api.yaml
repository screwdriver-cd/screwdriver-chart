apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.env }}-sdapi
  namespace: {{ .Values.namespace }}
  labels:
    app: api
    env: {{ .Values.env }}
    tier: svc
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: api
    env: {{ .Values.env }}
    tier: app
---
# requires service account to be created
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.env }}-sdapi
  namespace: {{ .Values.namespace }}
  labels:
    app: api
    env: {{ .Values.env }}
    tier: app
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: api
      env: {{ .Values.env }}
      tier: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
        env: {{ .Values.env }}
        tier: app
    spec:
      serviceAccount: sd-buildbot
      containers:
      - name: screwdriver-api
        image: {{ .Values.api.image }}
        ports:
        - containerPort: 80
          protocol: TCP
        # Validate that the service is started
        livenessProbe:
          httpGet:
            path: /v4/status
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 1
        # Environment variables that point to your secrets in your secrets.yaml
        env:
          - name: LAUNCH_IMAGE
            value: {{ .Values.launcher.image }}
          - name: LAUNCH_VERSION
            value: {{ .Values.launcher.version }}
          - name: EXECUTOR_PLUGIN
            {{- if .Values.queue.enabled }}
            value: queue
            {{- else }}
            value: k8s
            {{- end }}
          {{- if .Values.queue.enabled }}
          - name: EXECUTOR_QUEUE_ENABLED
            value: "true"
          - name: QUEUE_REDIS_HOST
            value: {{ .Release.Name }}-redis-master
          - name: QUEUE_REDIS_PORT
            value: "6379"
          - name: QUEUE_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-redis
                key: redis-password
          {{- end }}
          - name: K8S_JOBS_NAMESPACE
            value: {{ .Values.namespace }}
          - name: K8S_TOKEN
            valueFrom:
              secretKeyRef:
                name: sd-buildbot-token
                key: token
          - name: DATASTORE_PLUGIN
            value: sequelize
          - name: URI
            value: {{ template "api.uri" . }}
          - name: PORT
            value: "80"
          - name: ECOSYSTEM_UI
            value: {{ template "ui.uri" . }}
          - name: ECOSYSTEM_STORE
            value: {{ template "store.uri" . }}
          - name: SCM_SETTINGS
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: scmsettings
          - name: SECRET_JWT_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: jwtprivatekey
          - name: SECRET_JWT_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: jwtpublickey
          - name: SECRET_COOKIE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: cookiepassword
          - name: DATASTORE_SEQUELIZE_DIALECT
            value: postgres
          - name: DATASTORE_SEQUELIZE_HOST
            value: {{ template "postgresql.hostname" . }}
          - name: DATASTORE_SEQUELIZE_PREFIX
            value: "{{ .Values.env }}-"
          - name: DATASTORE_SEQUELIZE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: {{- if .Values.postgresql.enabled }} {{ template "postgresql.fullname" .}} {{- else }} "screwdriver-api-{{ .Values.env }}-secrets" {{- end }}
          - name: DATASTORE_SEQUELIZE_PORT
            value: {{ .Values.postgresql.postgresqlPort | quote }}
          - name: DATASTORE_SEQUELIZE_USERNAME
            value: {{ .Values.postgresql.postgresqlUsername | quote }}
          - name: SECRET_PASSWORD
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: encryptionpassword
          - name: SECRET_HASHING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: screwdriver-api-{{ .Values.env }}-secrets
                key: hashingpassword
          {{- if .Values.notifications.enabled }}
          - name: NOTIFICATIONS
            valueFrom:
              secretKeyRef:
                key: notifications
                name: screwdriver-api-{{ .Values.env }}-secrets
          {{- end }}
          {{- if .Values.ingress.singleHost.enabled }}
          - name: OAUTH_REDIRECT_URI
            value: {{ template "api.uri" . }}
          {{- end }}
          - name: SECRET_WHITELIST
            value: '[]'
